{
  "openapi": "3.0.1",
  "info": {
    "description": "Swagger UI demo by gpcoder.com",
    "version": "1.0.0",
    "title": "Swagger UI Demo",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "contact@gpcoder.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "servers": [
    {
      "url": "http://localhost:8080/api/v1"
    }
  ],
  "tags": [
    {
      "name": "user",
      "description": "Operations about user",
      "externalDocs": {
        "description": "Find out more",
        "url": "http://swagger.io"
      }
    },
    {
      "name": "product",
      "description": "Everything about product",
      "externalDocs": {
        "description": "Find out more about our store",
        "url": "http://swagger.io"
      }
    },
    {
      "name": "order",
      "description": "Operations about order",
      "externalDocs": {
        "description": "Find out more about our store",
        "url": "http://swagger.io"
      }
    },
    {
      "name": "mail",
      "description": "Operations about send email"
    },
    {
      "name": "payment",
      "description": "Operations about payment",
      "externalDocs": {
        "description": "Find out more about our store",
        "url": "http://swagger.io"
      }
    }
  ],
  "paths": {
    "/register": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Register account",
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "quyen@gmail.com"
                  },
                  "password": {
                    "type": "string",
                    "example": 123456
                  },
                  "fullname": {
                    "type": "string",
                    "example": "quyen nguyen"
                  },
                  "phonenumber": {
                    "type": "string",
                    "example": 987654321
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Signed up successfully!",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Email already exists!"
          },
          "500": {
            "description": "Exception"
          }
        }
      }
    },
    "/login": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Login account",
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "quyen@gmail.com"
                  },
                  "password": {
                    "type": "string",
                    "example": 123456
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successfully!",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "401": {
            "description": "Wrong username or password!"
          },
          "500": {
            "description": "Exception"
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Get users",
        "responses": {
          "200": {
            "description": "Get all user successfully!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Exception"
          }
        }
      }
    },
    "/user/{userId}": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Get user by id",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Get user successfully!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Exception"
          }
        }
      },
      "put": {
        "tags": [
          "user"
        ],
        "summary": "Update user by id",
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "items": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Update user successfully!"
          },
          "500": {
            "description": "Exception"
          }
        }
      }
    },
    "/updatePassword": {
      "put": {
        "tags": [
          "user"
        ],
        "summary": "Update user by id",
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "quyen@gmail.com"
                  },
                  "password": {
                    "type": "string",
                    "example": 123456
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update password successfully!"
          },
          "500": {
            "description": "Exception"
          }
        }
      }
    },
    "/product": {
      "get": {
        "tags": [
          "product"
        ],
        "summary": "Get all product",
        "responses": {
          "200": {
            "description": "Get product successfully!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Exception"
          }
        }
      },
      "post": {
        "tags": [
          "product"
        ],
        "summary": "Add new product",
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Product"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Add new product successfully!",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "500": {
            "description": "Exception"
          }
        }
      }
    },
    "/product/{productId}": {
      "get": {
        "tags": [
          "product"
        ],
        "summary": "Get product",
        "parameters": [
          {
            "in": "path",
            "name": "productId",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Get product successfully!",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "500": {
            "description": "Exception"
          }
        }
      },
      "put": {
        "tags": [
          "product"
        ],
        "summary": "Update product",
        "parameters": [
          {
            "in": "path",
            "name": "productId",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Product"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "update product successfully!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "items": {
                    "$ref": "#/components/schemas/Product"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "items": {
                    "$ref": "#/components/schemas/Product"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Exception"
          }
        }
      },
      "delete": {
        "tags": [
          "product"
        ],
        "summary": "Delete product",
        "parameters": [
          {
            "in": "path",
            "name": "productId",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "delete product successfully!"
          },
          "500": {
            "description": "Exception"
          }
        }
      }
    },
    "/product/search": {
      "post": {
        "tags": [
          "product"
        ],
        "summary": "Search by type",
        "parameters": [
          {
            "in": "query",
            "name": "type",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Search product successfully!",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "500": {
            "description": "Exception"
          }
        }
      }
    },
    "/product/sale": {
      "post": {
        "tags": [
          "product"
        ],
        "summary": "Search by sale",
        "responses": {
          "200": {
            "description": "Search product successfully!",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "500": {
            "description": "Exception"
          }
        }
      }
    },
    "/order": {
      "get": {
        "tags": [
          "order"
        ],
        "summary": "Get all order",
        "responses": {
          "200": {
            "description": "Get order successfully!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Order"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Order"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Exception"
          }
        }
      },
      "post": {
        "tags": [
          "order"
        ],
        "summary": "Add new order",
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Order"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Add new order successfully!",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            }
          },
          "500": {
            "description": "Exception"
          }
        }
      }
    },
    "/order/{orderId}": {
      "get": {
        "tags": [
          "order"
        ],
        "summary": "Get order",
        "parameters": [
          {
            "in": "path",
            "name": "orderId",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Get order successfully!",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            }
          },
          "500": {
            "description": "Exception"
          }
        }
      },
      "put": {
        "tags": [
          "order"
        ],
        "summary": "Update order",
        "parameters": [
          {
            "in": "path",
            "name": "orderId",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Order"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update order successfully!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "items": {
                    "$ref": "#/components/schemas/Order"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "items": {
                    "$ref": "#/components/schemas/Order"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Exception"
          }
        }
      },
      "delete": {
        "tags": [
          "order"
        ],
        "summary": "Delete order",
        "parameters": [
          {
            "in": "path",
            "name": "orderId",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Delete order successfully!"
          },
          "500": {
            "description": "Exception"
          }
        }
      }
    },
    "/mail": {
      "post": {
        "tags": [
          "mail"
        ],
        "summary": "Send email",
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "quyen@gmail.com"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Email sent successfully."
                    },
                    "data": {
                      "type": "string",
                      "example": 98765
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Exception"
          }
        }
      }
    },
    "/payment/create_payment_url": {
      "post": {
        "tags": [
          "payment"
        ],
        "summary": "Payment",
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "amount": {
                    "type": "integer",
                    "example": 23000
                  },
                  "bankCode": {
                    "type": "string",
                    "example": ""
                  },
                  "language": {
                    "type": "string",
                    "example": "vn"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Exception"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "quyen@gmail.com"
          },
          "password": {
            "type": "string",
            "example": 123456
          },
          "fullname": {
            "type": "string",
            "example": "quyen nguyen"
          },
          "address": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Address"
            }
          },
          "phonenumber": {
            "type": "string",
            "example": 987654321
          },
          "avatar": {
            "type": "string",
            "example": "https://res.cloudinary.com/dz2fcqjpg/image/upload/v1695374699/mejug1pxuu1pkdrwbvro.jpg"
          },
          "gender": {
            "type": "boolean",
            "example": false
          },
          "admin": {
            "type": "boolean",
            "example": false
          },
          "carts": {
            "type": "array",
            "items": {}
          },
          "orders": {
            "type": "array",
            "items": {}
          }
        },
        "xml": {
          "name": "user"
        }
      },
      "Product": {
        "type": "object",
        "properties": {
          "img": {
            "type": "array",
            "example": "https://pacificcross.com.vn/wp-content/uploads/2020/11/b2ap3_large_cach-gap-quan-ao-di-du-lich.jpg",
            "items": {}
          },
          "name": {
            "type": "string",
            "example": "t-shirt"
          },
          "price": {
            "type": "integer",
            "format": "int64",
            "example": 20.01
          },
          "des": {
            "type": "string",
            "example": "t-shirt beautiful"
          },
          "category": {
            "type": "string",
            "example": "t-shirt"
          },
          "type": {
            "type": "string",
            "example": "men"
          },
          "trademark": {
            "type": "string",
            "example": "other"
          },
          "color": {
            "type": "array",
            "items": {},
            "example": [
              "red",
              "blue"
            ]
          },
          "size": {
            "type": "array",
            "items": {},
            "example": [
              "S",
              "M"
            ]
          },
          "style": {
            "type": "string",
            "example": "cute"
          },
          "origin": {
            "type": "string",
            "example": "Viet Nam"
          },
          "invetory": {
            "type": "integer",
            "example": 100
          },
          "sold": {
            "type": "integer",
            "example": 0
          },
          "sale": {
            "type": "boolean",
            "example": true
          },
          "percent": {
            "type": "integer",
            "example": 4
          }
        },
        "xml": {
          "name": "product"
        }
      },
      "Address": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "quyen"
          },
          "phonenumber": {
            "type": "string",
            "example": 987654321
          },
          "specificaddress": {
            "type": "string",
            "example": "178/211 khuong trung"
          },
          "ward": {
            "type": "string",
            "example": "khuong dinh"
          },
          "district": {
            "type": "string",
            "example": "thanh xuan"
          },
          "city": {
            "type": "string",
            "example": "ha noi"
          }
        },
        "xml": {
          "name": "address"
        }
      },
      "Order": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {},
            "example": []
          },
          "subtotal": {
            "type": "integer",
            "example": 30.33
          },
          "customer": {
            "type": "string",
            "example": ""
          },
          "shippingaddress": {
            "type": "string",
            "items": {
              "$ref": "#/components/schemas/Address"
            }
          },
          "status": {
            "type": "string",
            "example": 0
          }
        },
        "xml": {
          "name": "order"
        }
      },
      "Tag": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          }
        },
        "xml": {
          "name": "tag"
        }
      },
      "ApiResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        },
        "xml": {
          "name": "##default"
        }
      }
    },
    "requestBodies": {
      "UserArray": {
        "description": "List of user object",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        }
      }
    },
    "securitySchemes": {
      "petstore_auth": {
        "type": "oauth2",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://petstore3.swagger.io/oauth/authorize",
            "scopes": {
              "write:pets": "modify pets in your account",
              "read:pets": "read your pets"
            }
          }
        }
      },
      "api_key": {
        "type": "apiKey",
        "name": "api_key",
        "in": "header"
      }
    }
  }
}